set tags=/home/hongdouz/vobs/tags;,tags;
set nocompatible
set hlsearch
set ruler
set expandtab
"set list listchars=tab:>-
set ls=2
set autoindent
set backspace=indent,eol,start
set autoread
set showmode
set showmatch
set cursorline
set ignorecase smartcase
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
"set termencoding=utf-8,gbk
set encoding=utf-8
set tabstop=4
set shiftwidth=4
"""""""""""""""""""""""""""""""""""
colorscheme jellybeans 
:ab #b #!/bin/bash
:ab #i #include
:ab #d #define
:ab #f #ifdef
:ab #e #endif
:ab #s <stdio.h>
:ab #l <stdlib.h>
:ab #m <math.h>
:ab #t <string.h>
:ab #p <mpi.h>
:ab #o <stdbool.h>
autocmd InsertEnter * se cul
hi Function     cterm=NONE                      ctermfg=darkblue
hi comment      cterm=NONE ctermfg=DarkGrey    guibg=#000000   guifg=Black
hi Number                                       ctermfg=red
hi cursorline   cterm=bold
hi Search                  ctermbg=white   ctermfg=black
"hi Search       cterm=underline ctermbg=white   ctermfg=black

let mapleader = ","
map <silent> <leader>ss :source ~/.vimrc<cr>
map <silent> <leader>ee :e ~/.vimrc<cr>
autocmd! bufwritepost .vimrc source ~/.vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

"function! BuildYCM(info)
  " info is a dictionary with 3 fields
  " - name:   name of the plugin
  " - status: 'installed', 'updated', or 'unchanged'
  " - force:  set on PlugInstall! or PlugUpdate!
"  if a:info.status == 'installed' || a:info.force
"    !./install.py
"  endif
"endfunction

Plug 'junegunn/vim-easy-align'
Plug 'universal-ctags/ctags'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommender'
"Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
"Plug 'Valloric/YouCompleteMe', { 'do': function('BuildYCM') }
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'skywind3000/asyncrun.vim'
Plug 'octol/vim-cpp-enhanced-highlight'

call plug#end()
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" fzf setting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <silent> <leader>hh :History<cr>
nmap <silent> <leader>ff :Files<cr>
nmap <silent> <leader>gf :GFiles?<cr>
nmap <silent> <leader>tt :Tags<cr>
nmap <silent> <leader>ll :Lines<cr>
nmap <silent> <leader>lp :Locate<space>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" asyncrun setting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:asyncrun_open = 6
let g:asyncrun_bell = 1
let g:asyncrun_rootmarks = ['.git', '.root']
"nnoremap <F7> :call asyncrun#quickfix_toggle(6)<cr>
"nnoremap <silent> <F8> :AsyncRun -cwd=<root> -raw make run <cr>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Taglist setting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set tags=./.tags;,.tags
let Tlist_Show_One_File = 1
let Tlist_Exit_OnlyWindow = 1
"let Tlist_Use_Left_Window = 1
let Tlist_Use_Right_Window = 1
let Tlist_GainFocus_On_ToggleOpen = 1
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <silent> <F9> :TlistToggle<cr> 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set viminfo='10,"100,:20,%,n~/.viminfo
set sessionoptions-=curdir
set sessionoptions+=sesdir
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" mark setting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" mark colors
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
hi MarkWord1  ctermbg=1     ctermfg=Black  guibg=#8CCBEA    guifg=Black
hi MarkWord2  ctermbg=2     ctermfg=Black  guibg=#A4E57E    guifg=Black
hi MarkWord3  ctermbg=3     ctermfg=Black  guibg=#FFDB72    guifg=Black
hi MarkWord4  ctermbg=4     ctermfg=Black  guibg=#FF7272    guifg=Black
hi MarkWord5  ctermbg=5     ctermfg=Black  guibg=#FFB3FF    guifg=Black
hi MarkWord6  ctermbg=6     ctermfg=Black  guibg=#9999FF    guifg=Black
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <silent> <leader>hl <Plug>MarkSet
nmap <silent> <leader>hh <Plug>MarkClear
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" cscope setting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("cscope")
  set csprg=/usr/bin/cscope
  set csto=1
  set cst
  set nocsverb
  " add any database in current directory
  if filereadable("cscope.out")
        cs add cscope.out
  " else add database pointed to by environment
  elseif $CSCOPE_DB != ""
  cs add $CSCOPE_DB
  endif
  set csverb
endif
  nmap <C-@>s :cs find s <C-R>=expand("<cword>")<CR><CR>
  nmap <C-@>g :cs find g <C-R>=expand("<cword>")<CR><CR>
  nmap <C-@>c :cs find c <C-R>=expand("<cword>")<CR><CR>
  nmap <C-@>t :cs find t <C-R>=expand("<cword>")<CR><CR>
  nmap <C-@>e :cs find e <C-R>=expand("<cword>")<CR><CR>
  nmap <C-@>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
  nmap <C-@>i :cs find i <C-R>=expand("<cfile>")<CR><CR>
  nmap <C-@>d :cs find d <C-R>=expand("<cword>")<CR><CR>
""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""""""""""""""""""""""""""""""""
" NerdTree
"""""""""""""""""""""""""""""""""""""""""""""
"map <F8> :NERDTreeMirror<CR>
map <F7> :NERDTreeToggle<CR>
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
"let g:NERDTreeShowIgnoredStatus = 1
let NERDTreeWinPos='right'
"let NERDTreeWinPos='left'
let NERDTreeWinSize=50
"let g:NERDTreeNodeDelimiter = "\u00a0"
let g:NERDTreeNodeDelimiter = " "

"""""""""""""""""""""""""""""""""""""""""""""
"nerdcommender

let g:NERDSpaceDelims=1
"""""""""""""""""""""""""""""""""""""""""""""
" omicomplete
set nocp  
filetype plugin on  

"""""""""""""""""""""""""""""""""""""""""""""
set omnifunc=omni

"""""""""""""""""""""""""""""""""""""""""""""
let g:airline#extensions#tabline#enabled = 1
let g:airline_section_b = '%{strftime("%y %m/%d-%H:%M")}'
"tabline display name only,remove path
let g:airline#extensions#tabline#fnamemod = ':t'
